name: Build Go-Proxy-BingAI

on:
  pull_request:
    types: [opened, synchronize]
  push:
    tags:
      - v*
    branches:
      - '*'
  workflow_dispatch:

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 'stable'
          check-latest: true

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.17.0

      - name: Build Frontend
        run: |
          rm -r web/* && git checkout web/web.go
          echo $(ls ./web/assets)
          cd frontend
          npm install
          npm run build
          cd ..

      - name: Commit latest webFile
        run: |
          echo $(ls ./web/assets)
          git config --global user.email "user3678169@163.com"
          git config --global user.name "luanyaolingwu"
          if git status --porcelain | grep -E '^(M| M|\?\?)' > /dev/null; then
            git add -u web/*
            git commit -m "[Upgrade] ðŸš€ Upload latest webFile"
            git push origin HEAD:master
          else
            echo "No changes to commit and push."
          fi

      - name: Build binary
        run: |
          GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -tags netgo -trimpath -o app-main main.go && tar -zcvf app-linux-amd64.tar.gz app-main
          GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -tags netgo -trimpath -o app-main main.go && tar -zcvf app-linux-arm64.tar.gz app-main
          GOOS=linux GOARCH=arm GOARM=7 go build -ldflags="-s -w" -tags netgo -trimpath -o app-main main.go && tar -zcvf app-linux-armv7.tar.gz app-main
          GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -tags netgo -trimpath -o app-main.exe main.go && tar -zcvf app-windows-amd64.tar.gz app-main.exe
          GOOS=windows GOARCH=arm64 go build -ldflags="-s -w" -tags netgo -trimpath -o app-main.exe main.go && tar -zcvf app-windows-arm64.tar.gz app-main.exe
          GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -tags netgo -trimpath -o app-main main.go && tar -zcvf app-darwin-amd64.tar.gz app-main
          GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -tags netgo -trimpath -o app-main main.go && tar -zcvf app-darwin-arm64.tar.gz app-main

      - name: Create Release and Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: Workflow-${{ github.run_number }}
          files: |
            app-linux-amd64.tar.gz
            app-linux-arm64.tar.gz
            app-linux-armv7.tar.gz
            app-windows-amd64.tar.gz
            app-windows-arm64.tar.gz
            app-darwin-amd64.tar.gz
            app-darwin-arm64.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: web
          retention-days: 3

#  docker-build:
#    name: docker-build
#    needs: [build]
#    runs-on: ubuntu-latest
#    permissions:
#      packages: write
#      contents: read
#    steps:
#      - uses: actions/checkout@v3

#      - name: Setup timezone
#        uses: zcong1993/setup-timezone@master
#        with:
#          timezone: Asia/Shanghai

#      - name: Login to DockerHub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}

#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#      
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2

#      - name: Delete Old Frontend File
#        run: |
#          rm -r web/*

#      - uses: actions/download-artifact@v3
#        with:
#          name: dist
#          path: web

#      - name: Build and push
#        uses: docker/build-push-action@v4
#        with:
#          platforms: linux/amd64,linux/arm64,linux/arm/v7
#          context: .
#          file: ./docker/Dockerfile#  
#          push: true
#          tags: |
#            docker.io/zklcdc/go-proxy-bingai:${{ github.ref_name }}
#            docker.io/zklcdc/go-proxy-bingai:latest

#      - name: Delete artifact
#        uses: geekyeggo/delete-artifact@v2
#        with:
#          name: |
#            dist
